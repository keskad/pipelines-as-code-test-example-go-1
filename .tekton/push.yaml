---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
    name: petclinic-release
    namespace: petclinic-cicd
    annotations:
        # The event we are targeting as seen from the webhook payload
        # this can be an array too, i.e: [pull_request, push]
        pipelinesascode.tekton.dev/on-event: "[pull_request, push]"

        # The branch or tag we are targeting (ie: main, refs/tags/*)
        pipelinesascode.tekton.dev/on-target-branch: "*"

        # Fetch the git-clone task from hub, we are able to reference later on it
        # with taskRef and it will automatically be embedded into our pipeline.
        pipelinesascode.tekton.dev/task: "[git-clone, maven, kaniko]"
        # You can add more tasks in here to reuse, browse the one you like from here
        # https://hub.tekton.dev/
        # example:
        # pipelinesascode.tekton.dev/task-2: "[maven, buildah]"

        # How many runs we want to keep attached to this event
        pipelinesascode.tekton.dev/max-keep-runs: "5"
        pipelinesascode.tekton.dev/target-namespace: "petclinic-cicd"
spec:
    params:
        # The variable with brackets are special to Pipelines as Code
        # They will automatically be expanded with the events from Github.
        - name: repo_url
          value: "{{ repo_url }}"
        - name: revision
          value: "{{ revision }}"
    pipelineSpec:
        # todo: Move pipeline to external file
        params:
            - name: repo_url
            - name: revision
        workspaces:
            - name: source
            - name: basic-auth
            - name: maven-settings
#            - name: maven-cache
#              mountPath: /.m2/repository
        tasks:
            - name: fetch-repository
              taskRef:
                  name: git-clone
              workspaces:
                  - name: output
                    workspace: source
                  - name: basic-auth
                    workspace: basic-auth
              params:
                  - name: url
                    value: $(params.repo_url)
                  - name: revision
                    value: $(params.revision)

#            - name: set-version
#              taskRef:
#                  name: recognize-version

            # Test
#            -   name: test
#                taskRef:
#                    name: maven
#                runAfter:
#                    - fetch-repository
#                params:
#                    -   name: GOALS
#                        value:
#                            - clean
#                            - test
#                workspaces:
#                    -   name: source
#                        workspace: source
#                    -   name: maven-settings
#                        workspace: maven-settings

            # Package
            - name: maven-run
              taskRef:
                name: maven
              runAfter:
                - fetch-repository
              workspaces:
                - name: maven-settings
                  workspace: maven-settings
                - name: source
                  workspace: source

            # Publish docker
#            - name: publish-docker
#              taskRef:
#                  name: kaniko
#              runAfter:
#                  - package
#              params:
#                  - name: IMAGE
#                    # $(tasks.set-version.results.version)
#                    value: "docker-registry-lb.default.svc.cluster.local:5000/petclinic:latest"

    workspaces:
        - name: maven-settings
          emptyDir: {}
        - name: source
          volumeClaimTemplate:
              spec:
                  accessModes:
                      - ReadWriteOnce
                  resources:
                      requests:
                          storage: 1Gi
        - name: basic-auth
          secret:
              secretName: "pac-git-basic-auth-{{repo_owner}}-{{repo_name}}"
#        - name: maven-cache
#          persistentVolumeClaim:
#              claimName: maven-cache

